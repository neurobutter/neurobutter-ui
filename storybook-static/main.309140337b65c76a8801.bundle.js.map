{"version":3,"file":"main.309140337b65c76a8801.bundle.js","sources":["webpack:///./src/components/SimpleDagEditor/definitions.js"],"sourcesContent":["import joint from \"jointjs/index\";\r\n\r\nexport const DagNode = joint.dia.Element.define(\r\n  \"dag.Node\",\r\n  {\r\n    size: {\r\n      width: 150,\r\n      height: 50\r\n    },\r\n    inPorts: [\"in\"],\r\n    outPorts: [\"out\"],\r\n    ports: {\r\n      groups: {\r\n        out: {\r\n          position: {\r\n            name: \"absolute\",\r\n            args: {\r\n              x: \"50%\",\r\n              y: \"100%\"\r\n            }\r\n          },\r\n          attrs: {\r\n            \".port-body\": {\r\n              stroke: \"black\",\r\n              fill: \"red\",\r\n              strokeWidth: 2,\r\n              height: 10,\r\n              width: 20,\r\n              refX: -10,\r\n              refY: -5,\r\n              opacity: 1,\r\n              magnet: true\r\n            }\r\n          },\r\n          markup: '<rect class=\"port-body\"/>'\r\n        }\r\n      },\r\n      items: [\r\n        {\r\n          group: \"out\",\r\n          args: {} // overrides `args` from the group level definition.\r\n        }\r\n      ]\r\n    },\r\n    attrs: {\r\n      body: {\r\n        refWidth: \"100%\",\r\n        refHeight: \"100%\",\r\n        strokeWidth: 2,\r\n        stroke: \"#000000\",\r\n        fill: \"#FFFFFF\",\r\n        rx: 10,\r\n        ry: 10\r\n      },\r\n\r\n      label: {\r\n        fontSize: 15,\r\n        refX: \"50%\",\r\n        refY: \"50%\",\r\n        textVerticalAnchor: \"middle\",\r\n        textAnchor: \"middle\",\r\n        textWrap: {\r\n          text: \"\",\r\n          width: -25, // reference width minus 10\r\n          height: \"80%\", // half of the reference height\r\n          ellipsis: true // could also be a custom string, e.g. '...!?'\r\n        },\r\n        style: \"-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;\"\r\n      }\r\n    }\r\n  },\r\n  {\r\n    markup: [\r\n      {\r\n        tagName: \"rect\",\r\n        selector: \"body\"\r\n      },\r\n      {\r\n        tagName: \"text\",\r\n        selector: \"label\"\r\n      }\r\n    ],\r\n\r\n    setText: function(text) {\r\n      return this.attr(\"label/textWrap/text\", text || \"\");\r\n    }\r\n    // hidePort: function(text) {\r\n    //   console.log(\"hide port\");\r\n    //   return this.attr(\"ports/groups/out/attrs/opacity\", 0);\r\n    // },\r\n    // showPort: function(text) {\r\n    //   console.log(\"show port\");\r\n    //   return this.attr(\"ports/groups/out/attrs/opacity\", 1);\r\n    // }\r\n  }\r\n);\r\n\r\nexport const DagOutPort = new joint.shapes.devs.Model({\r\n  position: { x: 50, y: 50 },\r\n  size: { width: 90, height: 90 },\r\n  inPorts: [\"in1\", \"in2\"],\r\n  outPorts: [\"out\"],\r\n  ports: {\r\n    groups: {\r\n      in: {\r\n        attrs: {\r\n          \".port-body\": {\r\n            fill: \"#16A085\"\r\n          }\r\n        }\r\n      },\r\n      out: {\r\n        attrs: {\r\n          \".port-body\": {\r\n            fill: \"#E74C3C\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  attrs: {\r\n    \".label\": { text: \"Model\", \"ref-x\": 0.5, \"ref-y\": 0.2 },\r\n    rect: { fill: \"#2ECC71\" }\r\n  }\r\n});\r\n\r\nexport const DagEdge = joint.dia.Link.define(\r\n  \"dag.Edge\",\r\n  {\r\n    attrs: {\r\n      line: {\r\n        connection: true,\r\n        stroke: \"gray\",\r\n        strokeWidth: 2,\r\n        pointerEvents: \"none\",\r\n        targetMarker: {\r\n          type: \"path\",\r\n          fill: \"gray\",\r\n          stroke: \"none\",\r\n          d: \"M 10 -10 0 0 10 10 z\"\r\n        }\r\n      }\r\n    },\r\n    router: {\r\n      name: \"manhattan\"\r\n    },\r\n    connector: {\r\n      name: \"rounded\"\r\n    },\r\n    z: -1,\r\n    weight: 0,\r\n    minLen: 0,\r\n    labels: [\r\n      {\r\n        markup: [\r\n          {\r\n            tagName: \"rect\",\r\n            selector: \"labelBody\"\r\n          },\r\n          {\r\n            tagName: \"text\",\r\n            selector: \"labelText\"\r\n          }\r\n        ],\r\n        size: {\r\n          width: 100,\r\n          height: 50\r\n        },\r\n        attrs: {\r\n          labelText: {\r\n            fill: \"gray\",\r\n            textAnchor: \"middle\",\r\n            textVerticalAnchor: \"middle\",\r\n            fontSize: 15,\r\n            cursor: \"pointer\"\r\n          },\r\n          labelBody: {\r\n            ref: \"labelText\",\r\n            fill: \"lightgray\",\r\n            stroke: \"gray\",\r\n            strokeWidth: 1,\r\n            refWidth: \"150%\",\r\n            refHeight: \"150%\",\r\n            yAlignment: \"middle\",\r\n            xAlignment: \"middle\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    markup: [\r\n      {\r\n        tagName: \"path\",\r\n        selector: \"line\",\r\n        attributes: {\r\n          fill: \"none\"\r\n        }\r\n      }\r\n    ],\r\n\r\n    connect: function(sourceId, targetId) {\r\n      return this.set({\r\n        source: { id: sourceId },\r\n        target: { id: targetId }\r\n      });\r\n    },\r\n\r\n    setLabelText: function(text) {\r\n      return this.prop(\"labels/0/attrs/labelText/text\", text || \"\");\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAEA","sourceRoot":""}